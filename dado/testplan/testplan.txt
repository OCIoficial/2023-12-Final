[Subtask 1 - validators/st1.cpp]
  # Casos de ejemplo
  sample ; copy statement/sample-*.in

  # Casos borde con dos caras, el resultado siempre es si
  dos-caras ; copy testplan/manual/dos-caras-*.in

  # Casos random con si
  random-yes ; gen_random_yes.py 10
  random-yes ; gen_random_yes.py 100
  random-yes ; gen_random_yes.py 250
  random-yes ; gen_random_yes.py 500

  # Casos random con no
  random-no ; gen_random_no.py 10
  random-no ; gen_random_no.py 50
  random-no ; gen_random_no.py 100
  random-no ; gen_random_no.py 250
  random-no ; gen_random_no.py 500

[Subtask 2 - validators/st2.cpp]
  @extends subtask 1

  # Casos random con si
  random-yes ; gen_random_yes.py 1000
  random-yes ; gen_random_yes.py 10000
  random-yes ; gen_random_yes.py 100000
  random-yes ; gen_random_yes.py 1000000

  # Casos random con no
  random-no ; gen_random_no.py 100000
  random-no ; gen_random_no.py 1000000

  # Caso borde con no
  border-no-asc ; worst_case_no.py asc
  border-no-desc ; worst_case_no.py desc
